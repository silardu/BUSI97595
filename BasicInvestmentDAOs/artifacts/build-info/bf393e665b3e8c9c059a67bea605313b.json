{
	"id": "bf393e665b3e8c9c059a67bea605313b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"BasicInvestmentDAOs/InvestmentContract.sol": {
				"content": "pragma solidity ^0.8.0;\n\nimport \"./SimpleOracle.sol\";\n\ncontract InvestmentContract {\n    SimpleOracle public oracle;\n\n    constructor(address _oracleAddress) {\n        oracle = SimpleOracle(_oracleAddress);\n    }\n\n    function shouldInvest() public view returns (bool) {\n        uint nftPrice = oracle.getNFTPrice();\n        // Basic investment logic based on NFT price\n        if (nftPrice > 1000 ether) { // Example threshold\n            return true;\n        }\n        return false;\n    }\n}"
			},
			"BasicInvestmentDAOs/SimpleOracle.sol": {
				"content": "pragma solidity ^0.8.0;\n\ncontract SimpleOracle {\n    uint public nftPrice;\n\n    function updateNFTPrice(uint _price) public {\n        nftPrice = _price;\n    }\n\n    function getNFTPrice() public view returns (uint) {\n        return nftPrice;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"BasicInvestmentDAOs/InvestmentContract.sol": {
				"InvestmentContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_oracleAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "oracle",
							"outputs": [
								{
									"internalType": "contract SimpleOracle",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shouldInvest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BasicInvestmentDAOs/InvestmentContract.sol\":55:492  contract InvestmentContract {... */\n  mstore(0x40, 0x80)\n    /* \"BasicInvestmentDAOs/InvestmentContract.sol\":122:212  constructor(address _oracleAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"BasicInvestmentDAOs/InvestmentContract.sol\":190:204  _oracleAddress */\n  dup1\n    /* \"BasicInvestmentDAOs/InvestmentContract.sol\":168:174  oracle */\n  0x00\n  dup1\n    /* \"BasicInvestmentDAOs/InvestmentContract.sol\":168:205  oracle = SimpleOracle(_oracleAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BasicInvestmentDAOs/InvestmentContract.sol\":122:212  constructor(address _oracleAddress) {... */\n  pop\n    /* \"BasicInvestmentDAOs/InvestmentContract.sol\":55:492  contract InvestmentContract {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"BasicInvestmentDAOs/InvestmentContract.sol\":55:492  contract InvestmentContract {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":55:492  contract InvestmentContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3905a3a1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7dc0d1d0\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":218:490  function shouldInvest() public view returns (bool) {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":89:115  SimpleOracle public oracle */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":218:490  function shouldInvest() public view returns (bool) {... */\n    tag_6:\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":263:267  bool */\n      0x00\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":279:292  uint nftPrice */\n      dup1\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":295:301  oracle */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":295:313  oracle.getNFTPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfb107a4f\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":295:315  oracle.getNFTPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_15\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_15:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":279:315  uint nftPrice = oracle.getNFTPrice() */\n      swap1\n      pop\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":393:403  1000 ether */\n      0x3635c9adc5dea00000\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":382:390  nftPrice */\n      dup2\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":382:403  nftPrice > 1000 ether */\n      gt\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":378:462  if (nftPrice > 1000 ether) { // Example threshold... */\n      iszero\n      tag_18\n      jumpi\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":447:451  true */\n      0x01\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":440:451  return true */\n      swap2\n      pop\n      pop\n      jump(tag_13)\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":378:462  if (nftPrice > 1000 ether) { // Example threshold... */\n    tag_18:\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":478:483  false */\n      0x00\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":471:483  return false */\n      swap2\n      pop\n      pop\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":218:490  function shouldInvest() public view returns (bool) {... */\n    tag_13:\n      swap1\n      jump\t// out\n        /* \"BasicInvestmentDAOs/InvestmentContract.sol\":89:115  SimpleOracle public oracle */\n    tag_10:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_19:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_20:\n        /* \"#utility.yul\":184:205   */\n      tag_36\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_19\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_8:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_38\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_20\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:560   */\n    tag_21:\n        /* \"#utility.yul\":471:478   */\n      0x00\n        /* \"#utility.yul\":511:553   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":504:509   */\n      dup3\n        /* \"#utility.yul\":500:554   */\n      and\n        /* \"#utility.yul\":489:554   */\n      swap1\n      pop\n        /* \"#utility.yul\":434:560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":566:626   */\n    tag_22:\n        /* \"#utility.yul\":594:597   */\n      0x00\n        /* \"#utility.yul\":615:620   */\n      dup2\n        /* \"#utility.yul\":608:620   */\n      swap1\n      pop\n        /* \"#utility.yul\":566:626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:774   */\n    tag_23:\n        /* \"#utility.yul\":682:691   */\n      0x00\n        /* \"#utility.yul\":715:768   */\n      tag_42\n        /* \"#utility.yul\":733:767   */\n      tag_43\n        /* \"#utility.yul\":742:766   */\n      tag_44\n        /* \"#utility.yul\":760:765   */\n      dup5\n        /* \"#utility.yul\":742:766   */\n      tag_21\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":733:767   */\n      tag_22\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":715:768   */\n      tag_21\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":702:768   */\n      swap1\n      pop\n        /* \"#utility.yul\":632:774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":780:906   */\n    tag_24:\n        /* \"#utility.yul\":830:839   */\n      0x00\n        /* \"#utility.yul\":863:900   */\n      tag_46\n        /* \"#utility.yul\":894:899   */\n      dup3\n        /* \"#utility.yul\":863:900   */\n      tag_23\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":850:900   */\n      swap1\n      pop\n        /* \"#utility.yul\":780:906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":912:1057   */\n    tag_25:\n        /* \"#utility.yul\":981:990   */\n      0x00\n        /* \"#utility.yul\":1014:1051   */\n      tag_48\n        /* \"#utility.yul\":1045:1050   */\n      dup3\n        /* \"#utility.yul\":1014:1051   */\n      tag_24\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1001:1051   */\n      swap1\n      pop\n        /* \"#utility.yul\":912:1057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1063:1232   */\n    tag_26:\n        /* \"#utility.yul\":1169:1225   */\n      tag_50\n        /* \"#utility.yul\":1219:1224   */\n      dup2\n        /* \"#utility.yul\":1169:1225   */\n      tag_25\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1164:1167   */\n      dup3\n        /* \"#utility.yul\":1157:1226   */\n      mstore\n        /* \"#utility.yul\":1063:1232   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1238:1498   */\n    tag_12:\n        /* \"#utility.yul\":1350:1354   */\n      0x00\n        /* \"#utility.yul\":1388:1390   */\n      0x20\n        /* \"#utility.yul\":1377:1386   */\n      dup3\n        /* \"#utility.yul\":1373:1391   */\n      add\n        /* \"#utility.yul\":1365:1391   */\n      swap1\n      pop\n        /* \"#utility.yul\":1401:1491   */\n      tag_52\n        /* \"#utility.yul\":1488:1489   */\n      0x00\n        /* \"#utility.yul\":1477:1486   */\n      dup4\n        /* \"#utility.yul\":1473:1490   */\n      add\n        /* \"#utility.yul\":1464:1470   */\n      dup5\n        /* \"#utility.yul\":1401:1491   */\n      tag_26\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1238:1498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1585:1702   */\n    tag_28:\n        /* \"#utility.yul\":1694:1695   */\n      0x00\n        /* \"#utility.yul\":1691:1692   */\n      dup1\n        /* \"#utility.yul\":1684:1696   */\n      revert\n        /* \"#utility.yul\":1831:1908   */\n    tag_30:\n        /* \"#utility.yul\":1868:1875   */\n      0x00\n        /* \"#utility.yul\":1897:1902   */\n      dup2\n        /* \"#utility.yul\":1886:1902   */\n      swap1\n      pop\n        /* \"#utility.yul\":1831:1908   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1914:2036   */\n    tag_31:\n        /* \"#utility.yul\":1987:2011   */\n      tag_58\n        /* \"#utility.yul\":2005:2010   */\n      dup2\n        /* \"#utility.yul\":1987:2011   */\n      tag_30\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1980:1985   */\n      dup2\n        /* \"#utility.yul\":1977:2012   */\n      eq\n        /* \"#utility.yul\":1967:2030   */\n      tag_59\n      jumpi\n        /* \"#utility.yul\":2026:2027   */\n      0x00\n        /* \"#utility.yul\":2023:2024   */\n      dup1\n        /* \"#utility.yul\":2016:2028   */\n      revert\n        /* \"#utility.yul\":1967:2030   */\n    tag_59:\n        /* \"#utility.yul\":1914:2036   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2042:2185   */\n    tag_32:\n        /* \"#utility.yul\":2099:2104   */\n      0x00\n        /* \"#utility.yul\":2130:2136   */\n      dup2\n        /* \"#utility.yul\":2124:2137   */\n      mload\n        /* \"#utility.yul\":2115:2137   */\n      swap1\n      pop\n        /* \"#utility.yul\":2146:2179   */\n      tag_61\n        /* \"#utility.yul\":2173:2178   */\n      dup2\n        /* \"#utility.yul\":2146:2179   */\n      tag_31\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2042:2185   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2191:2542   */\n    tag_17:\n        /* \"#utility.yul\":2261:2267   */\n      0x00\n        /* \"#utility.yul\":2310:2312   */\n      0x20\n        /* \"#utility.yul\":2298:2307   */\n      dup3\n        /* \"#utility.yul\":2289:2296   */\n      dup5\n        /* \"#utility.yul\":2285:2308   */\n      sub\n        /* \"#utility.yul\":2281:2313   */\n      slt\n        /* \"#utility.yul\":2278:2397   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":2316:2395   */\n      tag_64\n      tag_28\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2278:2397   */\n    tag_63:\n        /* \"#utility.yul\":2436:2437   */\n      0x00\n        /* \"#utility.yul\":2461:2525   */\n      tag_65\n        /* \"#utility.yul\":2517:2524   */\n      dup5\n        /* \"#utility.yul\":2508:2514   */\n      dup3\n        /* \"#utility.yul\":2497:2506   */\n      dup6\n        /* \"#utility.yul\":2493:2515   */\n      add\n        /* \"#utility.yul\":2461:2525   */\n      tag_32\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2451:2525   */\n      swap2\n      pop\n        /* \"#utility.yul\":2407:2535   */\n      pop\n        /* \"#utility.yul\":2191:2542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201072b463093883e4609183a37b3093f4ab7dc0faad9537bbb845c7e134337d1864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:2",
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:81:2",
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nativeSrc": "389:65:2",
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:2",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nativeSrc": "400:54:2",
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nativeSrc": "511:51:2",
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nativeSrc": "521:35:2",
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nativeSrc": "532:24:2",
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:2",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:2",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nativeSrc": "611:79:2",
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:2",
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:2",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:2",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nativeSrc": "670:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nativeSrc": "670:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nativeSrc": "641:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nativeSrc": "631:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nativeSrc": "624:43:2",
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nativeSrc": "621:63:2",
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:2",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nativeSrc": "759:80:2",
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nativeSrc": "769:22:2",
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nativeSrc": "778:13:2",
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nativeSrc": "800:33:2",
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nativeSrc": "800:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:2",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:2",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:2",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nativeSrc": "922:274:2",
													"nodeType": "YulBlock",
													"src": "922:274:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:2",
																"nodeType": "YulBlock",
																"src": "968:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:2"
																			},
																			"nativeSrc": "970:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:2"
																		},
																		"nativeSrc": "970:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:2"
																		},
																		"nativeSrc": "939:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:2",
																		"nodeType": "YulLiteral",
																		"src": "964:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:2"
																},
																"nativeSrc": "935:32:2",
																"nodeType": "YulFunctionCall",
																"src": "935:32:2"
															},
															"nativeSrc": "932:119:2",
															"nodeType": "YulIf",
															"src": "932:119:2"
														},
														{
															"nativeSrc": "1061:128:2",
															"nodeType": "YulBlock",
															"src": "1061:128:2",
															"statements": [
																{
																	"nativeSrc": "1076:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:2",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:2"
																				},
																				"nativeSrc": "1147:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:2",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:2"
																		},
																		"nativeSrc": "1115:64:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:2",
														"nodeType": "YulTypedName",
														"src": "892:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:2",
														"nodeType": "YulTypedName",
														"src": "903:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:2",
														"nodeType": "YulTypedName",
														"src": "915:6:2",
														"type": ""
													}
												],
												"src": "845:351:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516103b43803806103b4833981810160405281019061003191906100d4565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a38261007a565b9050919050565b6100b381610099565b81146100bd575f80fd5b50565b5f815190506100ce816100aa565b92915050565b5f602082840312156100e9576100e8610076565b5b5f6100f6848285016100c0565b91505092915050565b6102a88061010c5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80633905a3a1146100385780637dc0d1d014610056575b5f80fd5b610040610074565b60405161004d9190610164565b60405180910390f35b61005e610127565b60405161006b91906101f7565b60405180910390f35b5f805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb107a4f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100de573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101029190610247565b9050683635c9adc5dea0000081111561011f576001915050610124565b5f9150505b90565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8115159050919050565b61015e8161014a565b82525050565b5f6020820190506101775f830184610155565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6101bf6101ba6101b58461017d565b61019c565b61017d565b9050919050565b5f6101d0826101a5565b9050919050565b5f6101e1826101c6565b9050919050565b6101f1816101d7565b82525050565b5f60208201905061020a5f8301846101e8565b92915050565b5f80fd5b5f819050919050565b61022681610214565b8114610230575f80fd5b50565b5f815190506102418161021d565b92915050565b5f6020828403121561025c5761025b610210565b5b5f61026984828501610233565b9150509291505056fea26469706673582212201072b463093883e4609183a37b3093f4ab7dc0faad9537bbb845c7e134337d1864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3B4 CODESIZE SUB DUP1 PUSH2 0x3B4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA3 DUP3 PUSH2 0x7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3 DUP2 PUSH2 0x99 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCE DUP2 PUSH2 0xAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9 JUMPI PUSH2 0xE8 PUSH2 0x76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF6 DUP5 DUP3 DUP6 ADD PUSH2 0xC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A8 DUP1 PUSH2 0x10C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3905A3A1 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x127 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB107A4F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x247 JUMP JUMPDEST SWAP1 POP PUSH9 0x3635C9ADC5DEA00000 DUP2 GT ISZERO PUSH2 0x11F JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x124 JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E DUP2 PUSH2 0x14A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x177 PUSH0 DUP4 ADD DUP5 PUSH2 0x155 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF PUSH2 0x1BA PUSH2 0x1B5 DUP5 PUSH2 0x17D JUMP JUMPDEST PUSH2 0x19C JUMP JUMPDEST PUSH2 0x17D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D0 DUP3 PUSH2 0x1A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1 DUP3 PUSH2 0x1C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F1 DUP2 PUSH2 0x1D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20A PUSH0 DUP4 ADD DUP5 PUSH2 0x1E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x226 DUP2 PUSH2 0x214 JUMP JUMPDEST DUP2 EQ PUSH2 0x230 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x241 DUP2 PUSH2 0x21D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25C JUMPI PUSH2 0x25B PUSH2 0x210 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x269 DUP5 DUP3 DUP6 ADD PUSH2 0x233 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT PUSH19 0xB463093883E4609183A37B3093F4AB7DC0FAAD SWAP6 CALLDATACOPY 0xBB 0xB8 GASLIMIT 0xC7 0xE1 CALLVALUE CALLER PUSH30 0x1864736F6C63430008180033000000000000000000000000000000000000 ",
							"sourceMap": "55:437:0:-:0;;;122:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;190:14;168:6;;:37;;;;;;;;;;;;;;;;;;122:90;55:437;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;55:437:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@oracle_5": {
									"entryPoint": 295,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@shouldInvest_38": {
									"entryPoint": 116,
									"id": 38,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_SimpleOracle_$62_to_t_address_fromStack": {
									"entryPoint": 488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_SimpleOracle_$62__to_t_address__fromStack_reversed": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_SimpleOracle_$62_to_t_address": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 528,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2545:2",
										"nodeType": "YulBlock",
										"src": "0:2545:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "49:48:2",
													"nodeType": "YulBlock",
													"src": "49:48:2",
													"statements": [
														{
															"nativeSrc": "59:32:2",
															"nodeType": "YulAssignment",
															"src": "59:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "84:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "77:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:2"
																		},
																		"nativeSrc": "77:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "70:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:2"
																},
																"nativeSrc": "70:21:2",
																"nodeType": "YulFunctionCall",
																"src": "70:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "59:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31:5:2",
														"nodeType": "YulTypedName",
														"src": "31:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "41:7:2",
														"nodeType": "YulTypedName",
														"src": "41:7:2",
														"type": ""
													}
												],
												"src": "7:90:2"
											},
											{
												"body": {
													"nativeSrc": "162:50:2",
													"nodeType": "YulBlock",
													"src": "162:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "179:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "199:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "184:14:2",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:2"
																		},
																		"nativeSrc": "184:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "172:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:2"
																},
																"nativeSrc": "172:34:2",
																"nodeType": "YulFunctionCall",
																"src": "172:34:2"
															},
															"nativeSrc": "172:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "172:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "103:109:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "150:5:2",
														"nodeType": "YulTypedName",
														"src": "150:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "157:3:2",
														"nodeType": "YulTypedName",
														"src": "157:3:2",
														"type": ""
													}
												],
												"src": "103:109:2"
											},
											{
												"body": {
													"nativeSrc": "310:118:2",
													"nodeType": "YulBlock",
													"src": "310:118:2",
													"statements": [
														{
															"nativeSrc": "320:26:2",
															"nodeType": "YulAssignment",
															"src": "320:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "332:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "343:2:2",
																		"nodeType": "YulLiteral",
																		"src": "343:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "328:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:2"
																},
																"nativeSrc": "328:18:2",
																"nodeType": "YulFunctionCall",
																"src": "328:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "320:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "394:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "407:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "418:1:2",
																				"nodeType": "YulLiteral",
																				"src": "418:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "403:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:2"
																		},
																		"nativeSrc": "403:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "356:37:2",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:2"
																},
																"nativeSrc": "356:65:2",
																"nodeType": "YulFunctionCall",
																"src": "356:65:2"
															},
															"nativeSrc": "356:65:2",
															"nodeType": "YulExpressionStatement",
															"src": "356:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "218:210:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "282:9:2",
														"nodeType": "YulTypedName",
														"src": "282:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "294:6:2",
														"nodeType": "YulTypedName",
														"src": "294:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "305:4:2",
														"nodeType": "YulTypedName",
														"src": "305:4:2",
														"type": ""
													}
												],
												"src": "218:210:2"
											},
											{
												"body": {
													"nativeSrc": "479:81:2",
													"nodeType": "YulBlock",
													"src": "479:81:2",
													"statements": [
														{
															"nativeSrc": "489:65:2",
															"nodeType": "YulAssignment",
															"src": "489:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "504:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "504:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "511:42:2",
																		"nodeType": "YulLiteral",
																		"src": "511:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:2"
																},
																"nativeSrc": "500:54:2",
																"nodeType": "YulFunctionCall",
																"src": "500:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "489:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "489:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "434:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "461:5:2",
														"nodeType": "YulTypedName",
														"src": "461:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "471:7:2",
														"nodeType": "YulTypedName",
														"src": "471:7:2",
														"type": ""
													}
												],
												"src": "434:126:2"
											},
											{
												"body": {
													"nativeSrc": "598:28:2",
													"nodeType": "YulBlock",
													"src": "598:28:2",
													"statements": [
														{
															"nativeSrc": "608:12:2",
															"nodeType": "YulAssignment",
															"src": "608:12:2",
															"value": {
																"name": "value",
																"nativeSrc": "615:5:2",
																"nodeType": "YulIdentifier",
																"src": "615:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "608:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "608:3:2"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "566:60:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "584:5:2",
														"nodeType": "YulTypedName",
														"src": "584:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "594:3:2",
														"nodeType": "YulTypedName",
														"src": "594:3:2",
														"type": ""
													}
												],
												"src": "566:60:2"
											},
											{
												"body": {
													"nativeSrc": "692:82:2",
													"nodeType": "YulBlock",
													"src": "692:82:2",
													"statements": [
														{
															"nativeSrc": "702:66:2",
															"nodeType": "YulAssignment",
															"src": "702:66:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "760:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "760:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "742:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "742:17:2"
																				},
																				"nativeSrc": "742:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "742:24:2"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "733:8:2",
																			"nodeType": "YulIdentifier",
																			"src": "733:8:2"
																		},
																		"nativeSrc": "733:34:2",
																		"nodeType": "YulFunctionCall",
																		"src": "733:34:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "715:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "715:17:2"
																},
																"nativeSrc": "715:53:2",
																"nodeType": "YulFunctionCall",
																"src": "715:53:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "702:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "702:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "632:142:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "672:5:2",
														"nodeType": "YulTypedName",
														"src": "672:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "682:9:2",
														"nodeType": "YulTypedName",
														"src": "682:9:2",
														"type": ""
													}
												],
												"src": "632:142:2"
											},
											{
												"body": {
													"nativeSrc": "840:66:2",
													"nodeType": "YulBlock",
													"src": "840:66:2",
													"statements": [
														{
															"nativeSrc": "850:50:2",
															"nodeType": "YulAssignment",
															"src": "850:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "894:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "894:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "863:30:2",
																	"nodeType": "YulIdentifier",
																	"src": "863:30:2"
																},
																"nativeSrc": "863:37:2",
																"nodeType": "YulFunctionCall",
																"src": "863:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "850:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "850:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "780:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "820:5:2",
														"nodeType": "YulTypedName",
														"src": "820:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "830:9:2",
														"nodeType": "YulTypedName",
														"src": "830:9:2",
														"type": ""
													}
												],
												"src": "780:126:2"
											},
											{
												"body": {
													"nativeSrc": "991:66:2",
													"nodeType": "YulBlock",
													"src": "991:66:2",
													"statements": [
														{
															"nativeSrc": "1001:50:2",
															"nodeType": "YulAssignment",
															"src": "1001:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1045:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1045:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1014:30:2",
																	"nodeType": "YulIdentifier",
																	"src": "1014:30:2"
																},
																"nativeSrc": "1014:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1014:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1001:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "1001:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_SimpleOracle_$62_to_t_address",
												"nativeSrc": "912:145:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "971:5:2",
														"nodeType": "YulTypedName",
														"src": "971:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "981:9:2",
														"nodeType": "YulTypedName",
														"src": "981:9:2",
														"type": ""
													}
												],
												"src": "912:145:2"
											},
											{
												"body": {
													"nativeSrc": "1147:85:2",
													"nodeType": "YulBlock",
													"src": "1147:85:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1164:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1164:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1219:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1219:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_SimpleOracle_$62_to_t_address",
																			"nativeSrc": "1169:49:2",
																			"nodeType": "YulIdentifier",
																			"src": "1169:49:2"
																		},
																		"nativeSrc": "1169:56:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1169:56:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1157:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1157:6:2"
																},
																"nativeSrc": "1157:69:2",
																"nodeType": "YulFunctionCall",
																"src": "1157:69:2"
															},
															"nativeSrc": "1157:69:2",
															"nodeType": "YulExpressionStatement",
															"src": "1157:69:2"
														}
													]
												},
												"name": "abi_encode_t_contract$_SimpleOracle_$62_to_t_address_fromStack",
												"nativeSrc": "1063:169:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1135:5:2",
														"nodeType": "YulTypedName",
														"src": "1135:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1142:3:2",
														"nodeType": "YulTypedName",
														"src": "1142:3:2",
														"type": ""
													}
												],
												"src": "1063:169:2"
											},
											{
												"body": {
													"nativeSrc": "1355:143:2",
													"nodeType": "YulBlock",
													"src": "1355:143:2",
													"statements": [
														{
															"nativeSrc": "1365:26:2",
															"nodeType": "YulAssignment",
															"src": "1365:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1377:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1377:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1388:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1388:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1373:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1373:3:2"
																},
																"nativeSrc": "1373:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1373:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1365:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1365:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1464:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1464:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1477:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1477:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1488:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1488:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1473:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1473:3:2"
																		},
																		"nativeSrc": "1473:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_SimpleOracle_$62_to_t_address_fromStack",
																	"nativeSrc": "1401:62:2",
																	"nodeType": "YulIdentifier",
																	"src": "1401:62:2"
																},
																"nativeSrc": "1401:90:2",
																"nodeType": "YulFunctionCall",
																"src": "1401:90:2"
															},
															"nativeSrc": "1401:90:2",
															"nodeType": "YulExpressionStatement",
															"src": "1401:90:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_SimpleOracle_$62__to_t_address__fromStack_reversed",
												"nativeSrc": "1238:260:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1327:9:2",
														"nodeType": "YulTypedName",
														"src": "1327:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1339:6:2",
														"nodeType": "YulTypedName",
														"src": "1339:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1350:4:2",
														"nodeType": "YulTypedName",
														"src": "1350:4:2",
														"type": ""
													}
												],
												"src": "1238:260:2"
											},
											{
												"body": {
													"nativeSrc": "1544:35:2",
													"nodeType": "YulBlock",
													"src": "1544:35:2",
													"statements": [
														{
															"nativeSrc": "1554:19:2",
															"nodeType": "YulAssignment",
															"src": "1554:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1570:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1570:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1564:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1564:5:2"
																},
																"nativeSrc": "1564:9:2",
																"nodeType": "YulFunctionCall",
																"src": "1564:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1554:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1554:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1504:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1537:6:2",
														"nodeType": "YulTypedName",
														"src": "1537:6:2",
														"type": ""
													}
												],
												"src": "1504:75:2"
											},
											{
												"body": {
													"nativeSrc": "1674:28:2",
													"nodeType": "YulBlock",
													"src": "1674:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1691:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1691:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1684:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1684:6:2"
																},
																"nativeSrc": "1684:12:2",
																"nodeType": "YulFunctionCall",
																"src": "1684:12:2"
															},
															"nativeSrc": "1684:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "1684:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1585:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1585:117:2"
											},
											{
												"body": {
													"nativeSrc": "1797:28:2",
													"nodeType": "YulBlock",
													"src": "1797:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1814:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1814:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1817:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1817:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1807:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1807:6:2"
																},
																"nativeSrc": "1807:12:2",
																"nodeType": "YulFunctionCall",
																"src": "1807:12:2"
															},
															"nativeSrc": "1807:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "1807:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1708:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1708:117:2"
											},
											{
												"body": {
													"nativeSrc": "1876:32:2",
													"nodeType": "YulBlock",
													"src": "1876:32:2",
													"statements": [
														{
															"nativeSrc": "1886:16:2",
															"nodeType": "YulAssignment",
															"src": "1886:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "1897:5:2",
																"nodeType": "YulIdentifier",
																"src": "1897:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1886:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1886:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1831:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1858:5:2",
														"nodeType": "YulTypedName",
														"src": "1858:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1868:7:2",
														"nodeType": "YulTypedName",
														"src": "1868:7:2",
														"type": ""
													}
												],
												"src": "1831:77:2"
											},
											{
												"body": {
													"nativeSrc": "1957:79:2",
													"nodeType": "YulBlock",
													"src": "1957:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2014:16:2",
																"nodeType": "YulBlock",
																"src": "2014:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2023:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2023:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2026:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2026:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2016:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2016:6:2"
																			},
																			"nativeSrc": "2016:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2016:12:2"
																		},
																		"nativeSrc": "2016:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2016:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1980:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1980:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2005:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "2005:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1987:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "1987:17:2"
																				},
																				"nativeSrc": "1987:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1987:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1977:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "1977:2:2"
																		},
																		"nativeSrc": "1977:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1977:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1970:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1970:6:2"
																},
																"nativeSrc": "1970:43:2",
																"nodeType": "YulFunctionCall",
																"src": "1970:43:2"
															},
															"nativeSrc": "1967:63:2",
															"nodeType": "YulIf",
															"src": "1967:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1914:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1950:5:2",
														"nodeType": "YulTypedName",
														"src": "1950:5:2",
														"type": ""
													}
												],
												"src": "1914:122:2"
											},
											{
												"body": {
													"nativeSrc": "2105:80:2",
													"nodeType": "YulBlock",
													"src": "2105:80:2",
													"statements": [
														{
															"nativeSrc": "2115:22:2",
															"nodeType": "YulAssignment",
															"src": "2115:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2130:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2130:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2124:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2124:5:2"
																},
																"nativeSrc": "2124:13:2",
																"nodeType": "YulFunctionCall",
																"src": "2124:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2115:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2115:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2173:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2173:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2146:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "2146:26:2"
																},
																"nativeSrc": "2146:33:2",
																"nodeType": "YulFunctionCall",
																"src": "2146:33:2"
															},
															"nativeSrc": "2146:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "2146:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2042:143:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2083:6:2",
														"nodeType": "YulTypedName",
														"src": "2083:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2091:3:2",
														"nodeType": "YulTypedName",
														"src": "2091:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2099:5:2",
														"nodeType": "YulTypedName",
														"src": "2099:5:2",
														"type": ""
													}
												],
												"src": "2042:143:2"
											},
											{
												"body": {
													"nativeSrc": "2268:274:2",
													"nodeType": "YulBlock",
													"src": "2268:274:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2314:83:2",
																"nodeType": "YulBlock",
																"src": "2314:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2316:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "2316:77:2"
																			},
																			"nativeSrc": "2316:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2316:79:2"
																		},
																		"nativeSrc": "2316:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2316:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2289:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2289:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2298:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2285:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2285:3:2"
																		},
																		"nativeSrc": "2285:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2285:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2310:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2310:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2281:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2281:3:2"
																},
																"nativeSrc": "2281:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2281:32:2"
															},
															"nativeSrc": "2278:119:2",
															"nodeType": "YulIf",
															"src": "2278:119:2"
														},
														{
															"nativeSrc": "2407:128:2",
															"nodeType": "YulBlock",
															"src": "2407:128:2",
															"statements": [
																{
																	"nativeSrc": "2422:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2422:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2436:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2436:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2426:6:2",
																			"nodeType": "YulTypedName",
																			"src": "2426:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2451:74:2",
																	"nodeType": "YulAssignment",
																	"src": "2451:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2497:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "2497:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2508:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "2508:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2493:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2493:3:2"
																				},
																				"nativeSrc": "2493:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2493:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2517:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2517:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2461:31:2",
																			"nodeType": "YulIdentifier",
																			"src": "2461:31:2"
																		},
																		"nativeSrc": "2461:64:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2461:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2451:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2451:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "2191:351:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2238:9:2",
														"nodeType": "YulTypedName",
														"src": "2238:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2249:7:2",
														"nodeType": "YulTypedName",
														"src": "2249:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2261:6:2",
														"nodeType": "YulTypedName",
														"src": "2261:6:2",
														"type": ""
													}
												],
												"src": "2191:351:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_SimpleOracle_$62_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_SimpleOracle_$62_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_SimpleOracle_$62_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_SimpleOracle_$62__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_SimpleOracle_$62_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c80633905a3a1146100385780637dc0d1d014610056575b5f80fd5b610040610074565b60405161004d9190610164565b60405180910390f35b61005e610127565b60405161006b91906101f7565b60405180910390f35b5f805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb107a4f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100de573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101029190610247565b9050683635c9adc5dea0000081111561011f576001915050610124565b5f9150505b90565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8115159050919050565b61015e8161014a565b82525050565b5f6020820190506101775f830184610155565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6101bf6101ba6101b58461017d565b61019c565b61017d565b9050919050565b5f6101d0826101a5565b9050919050565b5f6101e1826101c6565b9050919050565b6101f1816101d7565b82525050565b5f60208201905061020a5f8301846101e8565b92915050565b5f80fd5b5f819050919050565b61022681610214565b8114610230575f80fd5b50565b5f815190506102418161021d565b92915050565b5f6020828403121561025c5761025b610210565b5b5f61026984828501610233565b9150509291505056fea26469706673582212201072b463093883e4609183a37b3093f4ab7dc0faad9537bbb845c7e134337d1864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3905A3A1 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x127 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB107A4F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x247 JUMP JUMPDEST SWAP1 POP PUSH9 0x3635C9ADC5DEA00000 DUP2 GT ISZERO PUSH2 0x11F JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x124 JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E DUP2 PUSH2 0x14A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x177 PUSH0 DUP4 ADD DUP5 PUSH2 0x155 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF PUSH2 0x1BA PUSH2 0x1B5 DUP5 PUSH2 0x17D JUMP JUMPDEST PUSH2 0x19C JUMP JUMPDEST PUSH2 0x17D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D0 DUP3 PUSH2 0x1A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1 DUP3 PUSH2 0x1C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F1 DUP2 PUSH2 0x1D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20A PUSH0 DUP4 ADD DUP5 PUSH2 0x1E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x226 DUP2 PUSH2 0x214 JUMP JUMPDEST DUP2 EQ PUSH2 0x230 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x241 DUP2 PUSH2 0x21D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25C JUMPI PUSH2 0x25B PUSH2 0x210 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x269 DUP5 DUP3 DUP6 ADD PUSH2 0x233 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT PUSH19 0xB463093883E4609183A37B3093F4AB7DC0FAAD SWAP6 CALLDATACOPY 0xBB 0xB8 GASLIMIT 0xC7 0xE1 CALLVALUE CALLER PUSH30 0x1864736F6C63430008180033000000000000000000000000000000000000 ",
							"sourceMap": "55:437:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;218:272;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;89:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;218:272;263:4;279:13;295:6;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;279:36;;393:10;382:8;:21;378:84;;;447:4;440:11;;;;;378:84;478:5;471:12;;;218:272;;:::o;89:26::-;;;;;;;;;;;;:::o;7:90:2:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:126::-;471:7;511:42;504:5;500:54;489:65;;434:126;;;:::o;566:60::-;594:3;615:5;608:12;;566:60;;;:::o;632:142::-;682:9;715:53;733:34;742:24;760:5;742:24;:::i;:::-;733:34;:::i;:::-;715:53;:::i;:::-;702:66;;632:142;;;:::o;780:126::-;830:9;863:37;894:5;863:37;:::i;:::-;850:50;;780:126;;;:::o;912:145::-;981:9;1014:37;1045:5;1014:37;:::i;:::-;1001:50;;912:145;;;:::o;1063:169::-;1169:56;1219:5;1169:56;:::i;:::-;1164:3;1157:69;1063:169;;:::o;1238:260::-;1350:4;1388:2;1377:9;1373:18;1365:26;;1401:90;1488:1;1477:9;1473:17;1464:6;1401:90;:::i;:::-;1238:260;;;;:::o;1585:117::-;1694:1;1691;1684:12;1831:77;1868:7;1897:5;1886:16;;1831:77;;;:::o;1914:122::-;1987:24;2005:5;1987:24;:::i;:::-;1980:5;1977:35;1967:63;;2026:1;2023;2016:12;1967:63;1914:122;:::o;2042:143::-;2099:5;2130:6;2124:13;2115:22;;2146:33;2173:5;2146:33;:::i;:::-;2042:143;;;;:::o;2191:351::-;2261:6;2310:2;2298:9;2289:7;2285:23;2281:32;2278:119;;;2316:79;;:::i;:::-;2278:119;2436:1;2461:64;2517:7;2508:6;2497:9;2493:22;2461:64;:::i;:::-;2451:74;;2407:128;2191:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "136000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"oracle()": "infinite",
								"shouldInvest()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 55,
									"end": 492,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 55,
									"end": 492,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55,
									"end": 492,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 212,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 122,
									"end": 212,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 122,
									"end": 212,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 122,
									"end": 212,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 122,
									"end": 212,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 122,
									"end": 212,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 122,
									"end": 212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 122,
									"end": 212,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 190,
									"end": 204,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 168,
									"end": 174,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 174,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 168,
									"end": 205,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 168,
									"end": 205,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 168,
									"end": 205,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 168,
									"end": 205,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 168,
									"end": 205,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 168,
									"end": 205,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 168,
									"end": 205,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 168,
									"end": 205,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 168,
									"end": 205,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 168,
									"end": 205,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 168,
									"end": 205,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 168,
									"end": 205,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 168,
									"end": 205,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 168,
									"end": 205,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 168,
									"end": 205,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 168,
									"end": 205,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 168,
									"end": 205,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 168,
									"end": 205,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 122,
									"end": 212,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55,
									"end": 492,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 55,
									"end": 492,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 55,
									"end": 492,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 55,
									"end": 492,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55,
									"end": 492,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 492,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55,
									"end": 492,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 492,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55,
									"end": 492,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 55,
									"end": 492,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55,
									"end": 492,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201072b463093883e4609183a37b3093f4ab7dc0faad9537bbb845c7e134337d1864736f6c63430008180033",
									".code": [
										{
											"begin": 55,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 55,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55,
											"end": 492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55,
											"end": 492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55,
											"end": 492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55,
											"end": 492,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55,
											"end": 492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 492,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 55,
											"end": 492,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "3905A3A1"
										},
										{
											"begin": 55,
											"end": 492,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55,
											"end": 492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "7DC0D1D0"
										},
										{
											"begin": 55,
											"end": 492,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55,
											"end": 492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55,
											"end": 492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55,
											"end": 492,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 218,
											"end": 490,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 218,
											"end": 490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 218,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 218,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 218,
											"end": 490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 218,
											"end": 490,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 218,
											"end": 490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 218,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 218,
											"end": 490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 218,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 218,
											"end": 490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 218,
											"end": 490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 218,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 218,
											"end": 490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 218,
											"end": 490,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 218,
											"end": 490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 218,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 218,
											"end": 490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 218,
											"end": 490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 218,
											"end": 490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 218,
											"end": 490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 218,
											"end": 490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 218,
											"end": 490,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 89,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 89,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 89,
											"end": 115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 89,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 89,
											"end": 115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 89,
											"end": 115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 89,
											"end": 115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 89,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 89,
											"end": 115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 218,
											"end": 490,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 218,
											"end": 490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 295,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 295,
											"end": 301,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 295,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 301,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 295,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 295,
											"end": 301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 295,
											"end": 313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 295,
											"end": 313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 295,
											"end": 313,
											"name": "PUSH",
											"source": 0,
											"value": "FB107A4F"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 295,
											"end": 315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 295,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 295,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 279,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 279,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 393,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 382,
											"end": 390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 382,
											"end": 403,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 378,
											"end": 462,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 378,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 378,
											"end": 462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 447,
											"end": 451,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 440,
											"end": 451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 440,
											"end": 451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 440,
											"end": 451,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 378,
											"end": 462,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 378,
											"end": 462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 471,
											"end": 483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 471,
											"end": 483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 218,
											"end": 490,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 218,
											"end": 490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 218,
											"end": 490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 218,
											"end": 490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 89,
											"end": 115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 89,
											"end": 115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 89,
											"end": 115,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 89,
											"end": 115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 89,
											"end": 115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 434,
											"end": 560,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 434,
											"end": 560,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 471,
											"end": 478,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 553,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 504,
											"end": 509,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 500,
											"end": 554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 489,
											"end": 554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 489,
											"end": 554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 434,
											"end": 560,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 434,
											"end": 560,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 434,
											"end": 560,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 434,
											"end": 560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 566,
											"end": 626,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 566,
											"end": 626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 594,
											"end": 597,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 608,
											"end": 620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 608,
											"end": 620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 566,
											"end": 626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 566,
											"end": 626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 566,
											"end": 626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 566,
											"end": 626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 774,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 632,
											"end": 774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 682,
											"end": 691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 733,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 742,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 760,
											"end": 765,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 742,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 742,
											"end": 766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 742,
											"end": 766,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 742,
											"end": 766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 733,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 733,
											"end": 767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 733,
											"end": 767,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 733,
											"end": 767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 715,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 715,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 715,
											"end": 768,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 715,
											"end": 768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 702,
											"end": 768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 702,
											"end": 768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 632,
											"end": 774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 632,
											"end": 774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 780,
											"end": 906,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 780,
											"end": 906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 830,
											"end": 839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 894,
											"end": 899,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 863,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 863,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 863,
											"end": 900,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 863,
											"end": 900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 850,
											"end": 900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 850,
											"end": 900,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 780,
											"end": 906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 780,
											"end": 906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 780,
											"end": 906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 780,
											"end": 906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1057,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 912,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 981,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1045,
											"end": 1050,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1014,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1014,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1014,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1057,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1057,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1057,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1232,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1063,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1219,
											"end": 1224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1169,
											"end": 1225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1225,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1169,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1167,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1498,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1238,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1350,
											"end": 1354,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1390,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1386,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1365,
											"end": 1391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1365,
											"end": 1391,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1488,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1470,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1401,
											"end": 1491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1491,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1401,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1498,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1498,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1498,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1498,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1585,
											"end": 1702,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1585,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1694,
											"end": 1695,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1696,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1908,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1831,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1897,
											"end": 1902,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1902,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1902,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1908,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1908,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1914,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1987,
											"end": 2011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2011,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1987,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 1985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1977,
											"end": 2012,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1967,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1967,
											"end": 2030,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2028,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1967,
											"end": 2030,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1967,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2185,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2042,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2136,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2137,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2115,
											"end": 2137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2115,
											"end": 2137,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2146,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2173,
											"end": 2178,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2146,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2146,
											"end": 2179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2146,
											"end": 2179,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2146,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2185,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2185,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2185,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2185,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2542,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2191,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2312,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2298,
											"end": 2307,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2289,
											"end": 2296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2308,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2313,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2397,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2278,
											"end": 2397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2316,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2316,
											"end": 2395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2395,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2316,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2397,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2278,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2461,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2517,
											"end": 2524,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2506,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2515,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2461,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2525,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2461,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2407,
											"end": 2535,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2542,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"BasicInvestmentDAOs/InvestmentContract.sol",
								"BasicInvestmentDAOs/SimpleOracle.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"oracle()": "7dc0d1d0",
							"shouldInvest()": "3905a3a1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracleAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract SimpleOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldInvest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BasicInvestmentDAOs/InvestmentContract.sol\":\"InvestmentContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BasicInvestmentDAOs/InvestmentContract.sol\":{\"keccak256\":\"0xb3773635eb648b1530c6d67845b7d6545d0e1b5b3d8b08b0795c2159d2bb659c\",\"urls\":[\"bzz-raw://cbc461fd1906d73e80212dcc61fc1cf21bb5934375e5da55e378f20e70bd282e\",\"dweb:/ipfs/QmfZ324npQKhGmARDurRhGtdUQLSE9GWMPgk5F9Ws4TbkB\"]},\"BasicInvestmentDAOs/SimpleOracle.sol\":{\"keccak256\":\"0xcec13e1c78475b3d48a284a55f89d38984393581268041874ee44bbfb7e9ac84\",\"urls\":[\"bzz-raw://da7de0b9f2cecd9c0d4333158b2305bd7338b98b29feac20758cc3e7a3504736\",\"dweb:/ipfs/Qmd2LuucV5YSYSFhfJFF3o6sFpPDEhyWwb7DhzWkVBaA95\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "BasicInvestmentDAOs/InvestmentContract.sol:InvestmentContract",
								"label": "oracle",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(SimpleOracle)62"
							}
						],
						"types": {
							"t_contract(SimpleOracle)62": {
								"encoding": "inplace",
								"label": "contract SimpleOracle",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BasicInvestmentDAOs/SimpleOracle.sol": {
				"SimpleOracle": {
					"abi": [
						{
							"inputs": [],
							"name": "getNFTPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "updateNFTPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BasicInvestmentDAOs/SimpleOracle.sol\":25:248  contract SimpleOracle {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BasicInvestmentDAOs/SimpleOracle.sol\":25:248  contract SimpleOracle {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0d39fc81\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb0d6af16\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfb107a4f\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BasicInvestmentDAOs/SimpleOracle.sol\":53:73  uint public nftPrice */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BasicInvestmentDAOs/SimpleOracle.sol\":80:158  function updateNFTPrice(uint _price) public {... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      stop\n        /* \"BasicInvestmentDAOs/SimpleOracle.sol\":164:246  function getNFTPrice() public view returns (uint) {... */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BasicInvestmentDAOs/SimpleOracle.sol\":53:73  uint public nftPrice */\n    tag_7:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"BasicInvestmentDAOs/SimpleOracle.sol\":80:158  function updateNFTPrice(uint _price) public {... */\n    tag_13:\n        /* \"BasicInvestmentDAOs/SimpleOracle.sol\":145:151  _price */\n      dup1\n        /* \"BasicInvestmentDAOs/SimpleOracle.sol\":134:142  nftPrice */\n      0x00\n        /* \"BasicInvestmentDAOs/SimpleOracle.sol\":134:151  nftPrice = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BasicInvestmentDAOs/SimpleOracle.sol\":80:158  function updateNFTPrice(uint _price) public {... */\n      pop\n      jump\t// out\n        /* \"BasicInvestmentDAOs/SimpleOracle.sol\":164:246  function getNFTPrice() public view returns (uint) {... */\n    tag_15:\n        /* \"BasicInvestmentDAOs/SimpleOracle.sol\":208:212  uint */\n      0x00\n        /* \"BasicInvestmentDAOs/SimpleOracle.sol\":231:239  nftPrice */\n      dup1\n      sload\n        /* \"BasicInvestmentDAOs/SimpleOracle.sol\":224:239  return nftPrice */\n      swap1\n      pop\n        /* \"BasicInvestmentDAOs/SimpleOracle.sol\":164:246  function getNFTPrice() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_19:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_20:\n        /* \"#utility.yul\":177:201   */\n      tag_29\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_19\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_9:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_31\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_20\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_22:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_24:\n        /* \"#utility.yul\":842:866   */\n      tag_36\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_19\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_37\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_37:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_25:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_39\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_24\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_12:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_41\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_42\n      tag_22\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1118:1237   */\n    tag_41:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_43\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_25\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220467a60a8a5a4ce38eaf32b1b78f90ebd8115f1e91f1f58c50f41f2e2cf657dcc64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506101718061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80630d39fc8114610043578063b0d6af1614610061578063fb107a4f1461007d575b5f80fd5b61004b61009b565b60405161005891906100c9565b60405180910390f35b61007b60048036038101906100769190610110565b6100a0565b005b6100856100a9565b60405161009291906100c9565b60405180910390f35b5f5481565b805f8190555050565b5f8054905090565b5f819050919050565b6100c3816100b1565b82525050565b5f6020820190506100dc5f8301846100ba565b92915050565b5f80fd5b6100ef816100b1565b81146100f9575f80fd5b50565b5f8135905061010a816100e6565b92915050565b5f60208284031215610125576101246100e2565b5b5f610132848285016100fc565b9150509291505056fea2646970667358221220467a60a8a5a4ce38eaf32b1b78f90ebd8115f1e91f1f58c50f41f2e2cf657dcc64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD39FC81 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xB0D6AF16 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xFB107A4F EQ PUSH2 0x7D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x110 JUMP JUMPDEST PUSH2 0xA0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x85 PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xB1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDC PUSH0 DUP4 ADD DUP5 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEF DUP2 PUSH2 0xB1 JUMP JUMPDEST DUP2 EQ PUSH2 0xF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10A DUP2 PUSH2 0xE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x125 JUMPI PUSH2 0x124 PUSH2 0xE2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x132 DUP5 DUP3 DUP6 ADD PUSH2 0xFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID PUSH27 0x60A8A5A4CE38EAF32B1B78F90EBD8115F1E91F1F58C50F41F2E2CF PUSH6 0x7DCC64736F6C PUSH4 0x43000818 STOP CALLER ",
							"sourceMap": "25:223:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getNFTPrice_61": {
									"entryPoint": 169,
									"id": 61,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nftPrice_43": {
									"entryPoint": 155,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateNFTPrice_53": {
									"entryPoint": 160,
									"id": 53,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 226,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1374:2",
										"nodeType": "YulBlock",
										"src": "0:1374:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:2",
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nativeSrc": "62:16:2",
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:2",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:2",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:2",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nativeSrc": "155:53:2",
													"nodeType": "YulBlock",
													"src": "155:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:2"
																		},
																		"nativeSrc": "177:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:2"
																},
																"nativeSrc": "165:37:2",
																"nodeType": "YulFunctionCall",
																"src": "165:37:2"
															},
															"nativeSrc": "165:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:2",
														"nodeType": "YulTypedName",
														"src": "143:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:2",
														"nodeType": "YulTypedName",
														"src": "150:3:2",
														"type": ""
													}
												],
												"src": "90:118:2"
											},
											{
												"body": {
													"nativeSrc": "312:124:2",
													"nodeType": "YulBlock",
													"src": "312:124:2",
													"statements": [
														{
															"nativeSrc": "322:26:2",
															"nodeType": "YulAssignment",
															"src": "322:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:2",
																		"nodeType": "YulLiteral",
																		"src": "345:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:2"
																},
																"nativeSrc": "330:18:2",
																"nodeType": "YulFunctionCall",
																"src": "330:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:2",
																				"nodeType": "YulLiteral",
																				"src": "426:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:2"
																		},
																		"nativeSrc": "411:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:2"
																},
																"nativeSrc": "358:71:2",
																"nodeType": "YulFunctionCall",
																"src": "358:71:2"
															},
															"nativeSrc": "358:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:2",
														"nodeType": "YulTypedName",
														"src": "284:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:2",
														"nodeType": "YulTypedName",
														"src": "296:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:2",
														"nodeType": "YulTypedName",
														"src": "307:4:2",
														"type": ""
													}
												],
												"src": "214:222:2"
											},
											{
												"body": {
													"nativeSrc": "482:35:2",
													"nodeType": "YulBlock",
													"src": "482:35:2",
													"statements": [
														{
															"nativeSrc": "492:19:2",
															"nodeType": "YulAssignment",
															"src": "492:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:2",
																		"nodeType": "YulLiteral",
																		"src": "508:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:2"
																},
																"nativeSrc": "502:9:2",
																"nodeType": "YulFunctionCall",
																"src": "502:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:2",
														"nodeType": "YulTypedName",
														"src": "475:6:2",
														"type": ""
													}
												],
												"src": "442:75:2"
											},
											{
												"body": {
													"nativeSrc": "612:28:2",
													"nodeType": "YulBlock",
													"src": "612:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:2",
																		"nodeType": "YulLiteral",
																		"src": "629:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:2",
																		"nodeType": "YulLiteral",
																		"src": "632:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:2"
																},
																"nativeSrc": "622:12:2",
																"nodeType": "YulFunctionCall",
																"src": "622:12:2"
															},
															"nativeSrc": "622:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:2"
											},
											{
												"body": {
													"nativeSrc": "735:28:2",
													"nodeType": "YulBlock",
													"src": "735:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:2",
																		"nodeType": "YulLiteral",
																		"src": "752:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:2",
																		"nodeType": "YulLiteral",
																		"src": "755:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:2"
																},
																"nativeSrc": "745:12:2",
																"nodeType": "YulFunctionCall",
																"src": "745:12:2"
															},
															"nativeSrc": "745:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:2"
											},
											{
												"body": {
													"nativeSrc": "812:79:2",
													"nodeType": "YulBlock",
													"src": "812:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:16:2",
																"nodeType": "YulBlock",
																"src": "869:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "878:1:2",
																					"nodeType": "YulLiteral",
																					"src": "878:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "881:1:2",
																					"nodeType": "YulLiteral",
																					"src": "881:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "871:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:2"
																			},
																			"nativeSrc": "871:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:2"
																		},
																		"nativeSrc": "871:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "835:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "860:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "842:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:2"
																				},
																				"nativeSrc": "842:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "832:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:2"
																		},
																		"nativeSrc": "832:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "825:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:2"
																},
																"nativeSrc": "825:43:2",
																"nodeType": "YulFunctionCall",
																"src": "825:43:2"
															},
															"nativeSrc": "822:63:2",
															"nodeType": "YulIf",
															"src": "822:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "769:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "805:5:2",
														"nodeType": "YulTypedName",
														"src": "805:5:2",
														"type": ""
													}
												],
												"src": "769:122:2"
											},
											{
												"body": {
													"nativeSrc": "949:87:2",
													"nodeType": "YulBlock",
													"src": "949:87:2",
													"statements": [
														{
															"nativeSrc": "959:29:2",
															"nodeType": "YulAssignment",
															"src": "959:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "981:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "968:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:2"
																},
																"nativeSrc": "968:20:2",
																"nodeType": "YulFunctionCall",
																"src": "968:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "959:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "997:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:2"
																},
																"nativeSrc": "997:33:2",
																"nodeType": "YulFunctionCall",
																"src": "997:33:2"
															},
															"nativeSrc": "997:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "997:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "897:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "927:6:2",
														"nodeType": "YulTypedName",
														"src": "927:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "935:3:2",
														"nodeType": "YulTypedName",
														"src": "935:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "943:5:2",
														"nodeType": "YulTypedName",
														"src": "943:5:2",
														"type": ""
													}
												],
												"src": "897:139:2"
											},
											{
												"body": {
													"nativeSrc": "1108:263:2",
													"nodeType": "YulBlock",
													"src": "1108:263:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:2",
																"nodeType": "YulBlock",
																"src": "1154:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:2"
																			},
																			"nativeSrc": "1156:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:2"
																		},
																		"nativeSrc": "1156:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:2"
																		},
																		"nativeSrc": "1125:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:2"
																},
																"nativeSrc": "1121:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:2"
															},
															"nativeSrc": "1118:119:2",
															"nodeType": "YulIf",
															"src": "1118:119:2"
														},
														{
															"nativeSrc": "1247:117:2",
															"nodeType": "YulBlock",
															"src": "1247:117:2",
															"statements": [
																{
																	"nativeSrc": "1262:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1291:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1326:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1337:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1322:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:2"
																				},
																				"nativeSrc": "1322:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1346:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1301:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:2"
																		},
																		"nativeSrc": "1301:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1042:329:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:2",
														"nodeType": "YulTypedName",
														"src": "1078:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:2",
														"nodeType": "YulTypedName",
														"src": "1089:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:2",
														"nodeType": "YulTypedName",
														"src": "1101:6:2",
														"type": ""
													}
												],
												"src": "1042:329:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c80630d39fc8114610043578063b0d6af1614610061578063fb107a4f1461007d575b5f80fd5b61004b61009b565b60405161005891906100c9565b60405180910390f35b61007b60048036038101906100769190610110565b6100a0565b005b6100856100a9565b60405161009291906100c9565b60405180910390f35b5f5481565b805f8190555050565b5f8054905090565b5f819050919050565b6100c3816100b1565b82525050565b5f6020820190506100dc5f8301846100ba565b92915050565b5f80fd5b6100ef816100b1565b81146100f9575f80fd5b50565b5f8135905061010a816100e6565b92915050565b5f60208284031215610125576101246100e2565b5b5f610132848285016100fc565b9150509291505056fea2646970667358221220467a60a8a5a4ce38eaf32b1b78f90ebd8115f1e91f1f58c50f41f2e2cf657dcc64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD39FC81 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xB0D6AF16 EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xFB107A4F EQ PUSH2 0x7D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x110 JUMP JUMPDEST PUSH2 0xA0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x85 PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xB1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDC PUSH0 DUP4 ADD DUP5 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEF DUP2 PUSH2 0xB1 JUMP JUMPDEST DUP2 EQ PUSH2 0xF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10A DUP2 PUSH2 0xE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x125 JUMPI PUSH2 0x124 PUSH2 0xE2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x132 DUP5 DUP3 DUP6 ADD PUSH2 0xFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID PUSH27 0x60A8A5A4CE38EAF32B1B78F90EBD8115F1E91F1F58C50F41F2E2CF PUSH6 0x7DCC64736F6C PUSH4 0x43000818 STOP CALLER ",
							"sourceMap": "25:223:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;80:78;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;164:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;53:20;;;;:::o;80:78::-;145:6;134:8;:17;;;;80:78;:::o;164:82::-;208:4;231:8;;224:15;;164:82;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "73800",
								"executionCost": "121",
								"totalCost": "73921"
							},
							"external": {
								"getNFTPrice()": "2454",
								"nftPrice()": "2402",
								"updateNFTPrice(uint256)": "22514"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 248,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 248,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 248,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 25,
									"end": 248,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 25,
									"end": 248,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 25,
									"end": 248,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 25,
									"end": 248,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 248,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 25,
									"end": 248,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 248,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 25,
									"end": 248,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 25,
									"end": 248,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 248,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 25,
									"end": 248,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 25,
									"end": 248,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 248,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 25,
									"end": 248,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 248,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 248,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 25,
									"end": 248,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 248,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220467a60a8a5a4ce38eaf32b1b78f90ebd8115f1e91f1f58c50f41f2e2cf657dcc64736f6c63430008180033",
									".code": [
										{
											"begin": 25,
											"end": 248,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 248,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 248,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 25,
											"end": 248,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 25,
											"end": 248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 25,
											"end": 248,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 25,
											"end": 248,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 248,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 25,
											"end": 248,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "PUSH",
											"source": 1,
											"value": "D39FC81"
										},
										{
											"begin": 25,
											"end": 248,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 25,
											"end": 248,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "PUSH",
											"source": 1,
											"value": "B0D6AF16"
										},
										{
											"begin": 25,
											"end": 248,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 25,
											"end": 248,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "PUSH",
											"source": 1,
											"value": "FB107A4F"
										},
										{
											"begin": 25,
											"end": 248,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 25,
											"end": 248,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 25,
											"end": 248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25,
											"end": 248,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 53,
											"end": 73,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 53,
											"end": 73,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 73,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 53,
											"end": 73,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 53,
											"end": 73,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 53,
											"end": 73,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 53,
											"end": 73,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 73,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 53,
											"end": 73,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 53,
											"end": 73,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 53,
											"end": 73,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 53,
											"end": 73,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 53,
											"end": 73,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 53,
											"end": 73,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 53,
											"end": 73,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 53,
											"end": 73,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 73,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 53,
											"end": 73,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 53,
											"end": 73,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 53,
											"end": 73,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 53,
											"end": 73,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 53,
											"end": 73,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 53,
											"end": 73,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 80,
											"end": 158,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 80,
											"end": 158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 80,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 80,
											"end": 158,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 80,
											"end": 158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 80,
											"end": 158,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 80,
											"end": 158,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 80,
											"end": 158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 80,
											"end": 158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 80,
											"end": 158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 80,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 80,
											"end": 158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 80,
											"end": 158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 80,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 80,
											"end": 158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 80,
											"end": 158,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 80,
											"end": 158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 80,
											"end": 158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 80,
											"end": 158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 80,
											"end": 158,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 80,
											"end": 158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 80,
											"end": 158,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 164,
											"end": 246,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 164,
											"end": 246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 164,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 164,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 164,
											"end": 246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 164,
											"end": 246,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 164,
											"end": 246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 164,
											"end": 246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 246,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 164,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 164,
											"end": 246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 164,
											"end": 246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 164,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 164,
											"end": 246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 164,
											"end": 246,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 164,
											"end": 246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 164,
											"end": 246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 246,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 164,
											"end": 246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 164,
											"end": 246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 164,
											"end": 246,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 164,
											"end": 246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 164,
											"end": 246,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 53,
											"end": 73,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 53,
											"end": 73,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 73,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 53,
											"end": 73,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 53,
											"end": 73,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 53,
											"end": 73,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 80,
											"end": 158,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 80,
											"end": 158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 145,
											"end": 151,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 134,
											"end": 142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 134,
											"end": 151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 134,
											"end": 151,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 134,
											"end": 151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 80,
											"end": 158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 80,
											"end": 158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 164,
											"end": 246,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 164,
											"end": 246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 212,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 239,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 231,
											"end": 239,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 224,
											"end": 239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 224,
											"end": 239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 164,
											"end": 246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 164,
											"end": 246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"BasicInvestmentDAOs/InvestmentContract.sol",
								"BasicInvestmentDAOs/SimpleOracle.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getNFTPrice()": "fb107a4f",
							"nftPrice()": "0d39fc81",
							"updateNFTPrice(uint256)": "b0d6af16"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getNFTPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"updateNFTPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BasicInvestmentDAOs/SimpleOracle.sol\":\"SimpleOracle\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BasicInvestmentDAOs/SimpleOracle.sol\":{\"keccak256\":\"0xcec13e1c78475b3d48a284a55f89d38984393581268041874ee44bbfb7e9ac84\",\"urls\":[\"bzz-raw://da7de0b9f2cecd9c0d4333158b2305bd7338b98b29feac20758cc3e7a3504736\",\"dweb:/ipfs/Qmd2LuucV5YSYSFhfJFF3o6sFpPDEhyWwb7DhzWkVBaA95\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 43,
								"contract": "BasicInvestmentDAOs/SimpleOracle.sol:SimpleOracle",
								"label": "nftPrice",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> BasicInvestmentDAOs/InvestmentContract.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "BasicInvestmentDAOs/InvestmentContract.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> BasicInvestmentDAOs/SimpleOracle.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "BasicInvestmentDAOs/SimpleOracle.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"BasicInvestmentDAOs/InvestmentContract.sol": {
				"ast": {
					"absolutePath": "BasicInvestmentDAOs/InvestmentContract.sol",
					"exportedSymbols": {
						"InvestmentContract": [
							39
						],
						"SimpleOracle": [
							62
						]
					},
					"id": 40,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "BasicInvestmentDAOs/SimpleOracle.sol",
							"file": "./SimpleOracle.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 40,
							"sourceUnit": 63,
							"src": "25:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "InvestmentContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "InvestmentContract",
							"nameLocation": "64:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7dc0d1d0",
									"id": 5,
									"mutability": "mutable",
									"name": "oracle",
									"nameLocation": "109:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "89:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_SimpleOracle_$62",
										"typeString": "contract SimpleOracle"
									},
									"typeName": {
										"id": 4,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3,
											"name": "SimpleOracle",
											"nameLocations": [
												"89:12:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 62,
											"src": "89:12:0"
										},
										"referencedDeclaration": 62,
										"src": "89:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SimpleOracle_$62",
											"typeString": "contract SimpleOracle"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "158:54:0",
										"statements": [
											{
												"expression": {
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "168:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_SimpleOracle_$62",
															"typeString": "contract SimpleOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 12,
																"name": "_oracleAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "190:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 11,
															"name": "SimpleOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "177:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SimpleOracle_$62_$",
																"typeString": "type(contract SimpleOracle)"
															}
														},
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "177:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_SimpleOracle_$62",
															"typeString": "contract SimpleOracle"
														}
													},
													"src": "168:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_SimpleOracle_$62",
														"typeString": "contract SimpleOracle"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "168:37:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "_oracleAddress",
												"nameLocation": "142:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "134:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "134:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:24:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "158:0:0"
									},
									"scope": 39,
									"src": "122:90:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "269:221:0",
										"statements": [
											{
												"assignments": [
													23
												],
												"declarations": [
													{
														"constant": false,
														"id": 23,
														"mutability": "mutable",
														"name": "nftPrice",
														"nameLocation": "284:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 37,
														"src": "279:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 22,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 27,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 24,
															"name": "oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "295:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_SimpleOracle_$62",
																"typeString": "contract SimpleOracle"
															}
														},
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "302:11:0",
														"memberName": "getNFTPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 61,
														"src": "295:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "295:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "279:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 28,
														"name": "nftPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "382:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "393:10:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000000"
														},
														"value": "1000"
													},
													"src": "382:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 34,
												"nodeType": "IfStatement",
												"src": "378:84:0",
												"trueBody": {
													"id": 33,
													"nodeType": "Block",
													"src": "405:57:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "447:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 21,
															"id": 32,
															"nodeType": "Return",
															"src": "440:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "478:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 21,
												"id": 36,
												"nodeType": "Return",
												"src": "471:12:0"
											}
										]
									},
									"functionSelector": "3905a3a1",
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shouldInvest",
									"nameLocation": "227:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "239:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "263:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "263:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "262:6:0"
									},
									"scope": 39,
									"src": "218:272:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 40,
							"src": "55:437:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:492:0"
				},
				"id": 0
			},
			"BasicInvestmentDAOs/SimpleOracle.sol": {
				"ast": {
					"absolutePath": "BasicInvestmentDAOs/SimpleOracle.sol",
					"exportedSymbols": {
						"SimpleOracle": [
							62
						]
					},
					"id": 63,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 41,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SimpleOracle",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 62,
							"linearizedBaseContracts": [
								62
							],
							"name": "SimpleOracle",
							"nameLocation": "34:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0d39fc81",
									"id": 43,
									"mutability": "mutable",
									"name": "nftPrice",
									"nameLocation": "65:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 62,
									"src": "53:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 42,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "53:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "124:34:1",
										"statements": [
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 48,
														"name": "nftPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "134:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 49,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "145:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "134:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "134:17:1"
											}
										]
									},
									"functionSelector": "b0d6af16",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateNFTPrice",
									"nameLocation": "89:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "109:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "104:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "104:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "103:13:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "124:0:1"
									},
									"scope": 62,
									"src": "80:78:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "214:32:1",
										"statements": [
											{
												"expression": {
													"id": 58,
													"name": "nftPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 43,
													"src": "231:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 57,
												"id": 59,
												"nodeType": "Return",
												"src": "224:15:1"
											}
										]
									},
									"functionSelector": "fb107a4f",
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNFTPrice",
									"nameLocation": "173:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "184:2:1"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "208:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "208:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "207:6:1"
									},
									"scope": 62,
									"src": "164:82:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 63,
							"src": "25:223:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:248:1"
				},
				"id": 1
			}
		}
	}
}